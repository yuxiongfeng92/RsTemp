apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        minSdkVersion 19
        ndk {
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64', "mips", "mips64"
        }
        externalNativeBuild {
            cmake {
                arguments '-DANDROID_PLATFORM=android-14',
                        '-DANDROID_TOOLCHAIN=clang', '-DANDROID_STL=gnustl_static'
            }
        }
    }
    buildTypes {
        def logProguard = rootProject.ext.android.get('logProguard')
        release {
            minifyEnabled enable.toBoolean()
//            minifyEnabled false
            if (logProguard != null && new File(logProguard).exists()) {
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', logProguard
            } else {
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
        }

        debug {
            minifyEnabled enable.toBoolean()
//            minifyEnabled false
            if (logProguard != null && new File(logProguard).exists()) {
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', logProguard
            } else {
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    
    implementation 'com.wms:mqtt:1.0.0'
    //implementation project(path:':../ProtonLibrary:mqtt')
    implementation 'com.alibaba:fastjson:1.1.68.android'
    if (enable.toBoolean()) {
        api 'com.wms:ble:1.1.1-alpha5'
        implementation project(':tempAlgorithm')
//        implementation 'com.proton.temp:algorithm:1.1.2-alpha4'
    } else {
        implementation project(':tempAlgorithm')
//        api 'com.wms:ble:1.1.1-alpha5'
        api project(':ble')
    }
    implementation 'com.wms:logger:1.0.1'
    api 'com.wms:network:1.0.0-alpha03'
}

//if (enable.toBoolean()) {
//    File file = new File('/Users/wangmengsi/Desktop/upload.gradle')
//    if (file.exists()) {
//        apply from: file.absolutePath
//    }
//}